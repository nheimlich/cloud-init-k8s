#cloud-config
package_update: false
package_upgrade: false

write_files:
  - path: /usr/local/bin/setup.sh
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -e
      set -x

      DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y wget ca-certificates curl gnupg apt-transport-https

      modprobe overlay
      modprobe br_netfilter
      sysctl --system
      sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

      #configuring containerd
      test -d /etc/containerd || mkdir -p /etc/containerd
      rm -f /etc/containerd/config.toml
      containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' > /etc/containerd/config.toml

      wget -P "/lib/systemd/system/" -q --show-progress --https-only --timestamping https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
      systemctl daemon-reload && systemctl enable --now containerd
      crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock
      systemctl restart containerd

      /usr/local/bin/pki.sh
      /usr/local/bin/binaries.sh
      /usr/local/bin/services.sh

  - path: /usr/local/bin/binaries.sh
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      KUBE_VER="v1.23.0"
      ETCD_VER="v3.5.0"
      CRIT_VER="v1.30.1"
      RUNC_VER="v1.0.0"
      CNTD_VER="1.5.0"
      TEMP_DIR=$(mktemp -d)
      
      # Define URLs
      URLS=(
          "https://storage.googleapis.com/kubernetes-release/release/$KUBE_VER/bin/linux/amd64/kubectl"
          "https://storage.googleapis.com/kubernetes-release/release/$KUBE_VER/bin/linux/amd64/kube-apiserver"
          "https://storage.googleapis.com/kubernetes-release/release/$KUBE_VER/bin/linux/amd64/kube-controller-manager"
          "https://storage.googleapis.com/kubernetes-release/release/$KUBE_VER/bin/linux/amd64/kube-scheduler"
          "https://storage.googleapis.com/kubernetes-release/release/$KUBE_VER/bin/linux/amd64/kubelet"
          "https://github.com/etcd-io/etcd/releases/download/$ETCD_VER/etcd-$ETCD_VER-linux-amd64.tar.gz"
          "https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRIT_VER/crictl-$CRIT_VER-linux-amd64.tar.gz"
          "https://github.com/opencontainers/runc/releases/download/$RUNC_VER/runc.amd64"
          "https://github.com/containerd/containerd/releases/download/v$CNTD_VER/containerd-$CNTD_VER-linux-amd64.tar.gz"
      )
      
      # Download files to the temporary directory
      for url in "${URLS[@]}"; do
          wget -P "$TEMP_DIR" -q --show-progress --https-only --timestamping "$url"
      done
      
      chmod -R +x $TEMP_DIR/
      
      # Extract tar.gz files
      tar -xzf $TEMP_DIR/etcd-$ETCD_VER-linux-amd64.tar.gz -C $TEMP_DIR
      tar -xzf $TEMP_DIR/crictl-$CRIT_VER-linux-amd64.tar.gz -C $TEMP_DIR
      tar -xzf $TEMP_DIR/containerd-$CNTD_VER-linux-amd64.tar.gz -C $TEMP_DIR
      
      # Copy files to /usr/local/bin
      cp $TEMP_DIR/{kubectl,kube-apiserver,kube-controller-manager,kube-scheduler,kubelet,runc.amd64} /usr/local/bin/
      cp $TEMP_DIR/etcd-$ETCD_VER-linux-amd64/{etcd,etcdctl} /usr/local/bin/
      cp $TEMP_DIR/crictl /usr/local/bin/
      cp $TEMP_DIR/bin/* /usr/local/bin/
      
      # Cleanup
      rm -rf $TEMP_DIR

  - path: /usr/local/bin/services.sh
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      INTERNAL_IP=$(hostname -I | awk '{print $2}')
      ETCD_NAME=$(hostname -s)
      ETCD1=$(mdata-get etcd1)
      ETCD2=$(mdata-get etcd2)
      ETCD3=$(mdata-get etcd3)
      ETCD_CRT_DIR="/etc/etcd/"
      TEMP_DIR=$(mktemp -d)

      URLS=(
         "https://raw.githubusercontent.com/nheimlich/cloud-init-k8s/kubernetes-the-hard-way-cloud-init/configs/services/etcd.service"
         "https://raw.githubusercontent.com/nheimlich/cloud-init-k8s/kubernetes-the-hard-way-cloud-init/configs/services/kube-api.service"
         "https://raw.githubusercontent.com/nheimlich/cloud-init-k8s/kubernetes-the-hard-way-cloud-init/configs/services/kube-controller-manager.service"
         "https://raw.githubusercontent.com/nheimlich/cloud-init-k8s/kubernetes-the-hard-way-cloud-init/configs/services/kube-scheduler.service"
         "https://raw.githubusercontent.com/nheimlich/cloud-init-k8s/kubernetes-the-hard-way-cloud-init/configs/services/kubelet.service"
      )

      # etcd multi-cluster
      sed -i -e s/INTERNAL_IP/$INTERNAL_IP/g \
             -e s/ETCD_NAME/$ETCD_NAME/     \
             -e s/ETCD1/$ETCD1/    \
             -e s/ETCD2/$ETCD2/    \
             -e s/ETCD3/$ETCD3/    \
             -e s/\/etc\/etcd\//$ETCD_CRT_DIR/g
             $TEMP_DIR/etcd.service

      cp $TEMP_DIR/* /lib/systemd/system/

      systemctl daemon-reload
      systemctl enable --now etcd.service kube-api.service kube-controller-manager.service kube-scheduler.service kubelet.service

      rm -rf $TEMP_DIR

  - path: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

runcmd:
  - /usr/local/bin/setup.sh
